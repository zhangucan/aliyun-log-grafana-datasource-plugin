{"version":3,"sources":["../../src/datasource.js"],"names":["GenericDatasource","instanceSettings","$q","backendSrv","templateSrv","type","url","name","projectName","jsonData","project","logstore","user","password","q","withCredentials","headers","basicAuth","length","defaultConfig","accessId","accessKey","timeout","signature_method","api_version","logger","options","console","log","requests","slsclient","SLS","promise","Promise","resolve","targets","forEach","target","hide","query","replace","scopedVars","value","variable","formatValue","multi","includeAll","a","label","push","v","join","_","isArray","re","reArray","match","old","col","sec","indexOf","parseInt","range","to","_d","getTime","from","doRequest","method","then","r","request","GetData","result","data","reject","Error","time_col","xcol","ycol","reduce","split","lastIndexOf","gbColArr","gbRes","mySet","Set","lastX","row","add","Array","resResult","datapoints","sortBy","_time","time","hasOwnProperty","parseFloat","isNaN","count","newtarget","pieRes","i","j","all","map","p","catch","e","errorCode","errorMessage","status","message","title","_t","t","err","Date","annotation","annotationQuery","datasource","enable","iconColor","rangeRaw","end","mapToTextValue","d","x","k","text","datasourceRequest","filter","refId"],"mappings":"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","file":"datasource.js","sourcesContent":["import _ from \"lodash\";\nimport {SLS} from \"./sls.js\";\n\nexport class GenericDatasource {\n    constructor(instanceSettings, $q, backendSrv, templateSrv) {\n        this.type = instanceSettings.type;\n        this.url = instanceSettings.url;\n        this.name = instanceSettings.name;\n        this.projectName = instanceSettings.jsonData.project;\n        this.logstore = instanceSettings.jsonData.logstore;\n        //this.endpoint = instanceSettings.jsonData.endpoint;\n        this.user = instanceSettings.jsonData.user;\n        this.password = instanceSettings.jsonData.password;\n        this.q = $q;\n        this.backendSrv = backendSrv;\n        this.templateSrv = templateSrv;\n        this.withCredentials = instanceSettings.withCredentials;\n        this.headers = {'Content-Type': 'application/json'};\n        if (typeof instanceSettings.basicAuth === 'string' && instanceSettings.basicAuth.length > 0) {\n            this.headers['Authorization'] = instanceSettings.basicAuth;\n        }\n        this.defaultConfig = {\n\n            //requires\n            accessId: this.user,                  //accessId\n            accessKey: this.password,                 //accessKey\n            //endpoint: this.endpoint,            //sls service endpoint\n\n            //optional\n            timeout: 20000,         //请求timeout时间, 默认: 20s\n\n\n            signature_method: 'hmac-sha1', //签名计算方式，目前只支持'hmac-sha1', 默认: 'hmac-sha1'\n            api_version: '0.6.0',  //数据相关api version 默认 0.3.0\n\n            logger: false   //打印请求的详细信息, log4js 实例\n        };\n\n    }\n\n    query(options) {\n        console.log(\"hello\",options)\n        let requests = []\n        let slsclient = new SLS(this.defaultConfig, this.backendSrv, this.url);\n        let promise = Promise.resolve();\n        _(options.targets).forEach(target => {\n            if (target.hide) {\n                return\n            }\n        let query = this.templateSrv.replace(target.query, options.scopedVars ,function(value,variable, formatValue){\n            console.log(typeof value);\n            if (typeof value === 'string') {\n                return value;\n            }\n            if (typeof value == \"object\" && (variable.multi || variable.includeAll)) {\n                let a = [];\n                value.forEach(v => {\n                    if(variable.name == variable.label)\n                        a.push('\"'+variable.name+'\":\"'+v+'\"');\n                    else\n                        a.push('\"'+v+'\"');\n                });\n                return a.join(\" OR \");\n            }\n            if (typeof value == \"array\" ||  (_.isArray(value)) ) {\n                return value.join(' OR ')\n            }\n        });\n        var re = /\\$([0-9]+)([dmhs])/g;\n        var reArray = query.match(re);\n        _(reArray).forEach(col => {\n            var old = col;\n            col = col.replace(\"$\",'');\n            var sec = 1;\n            if(col.indexOf(\"s\") != -1)\n                sec = 1;\n            else if(col.indexOf(\"m\") != -1)\n                sec = 60;\n            else if(col.indexOf(\"h\") != -1)\n                sec = 3600;\n            else if(col.indexOf(\"d\") != -1)\n                sec = 3600*24;\n            col = col .replace(/[smhd]/g,'');\n            var v = parseInt(col);\n            v = v* sec;\n            console.log(old,v,col,sec,query);\n            query = query.replace(old,v);\n        });\n            if(query.indexOf(\"#time_end\") != -1){\n                query = query.replace(\"#time_end\",(parseInt(options.range.to._d.getTime() / 1000)));\n            }\n            if(query.indexOf(\"#time_begin\") != -1){\n                query = query.replace(\"#time_begin\",(parseInt(options.range.from._d.getTime() / 1000)));\n            }\n\n            this.doRequest({\n                url: \"http://slstrack.cn-hangzhou.log.aliyuncs.com/logstores/grafana/track_ua.gif?APIVersion=0.6.0&&query=\"+query+\"&project=\"+this.projectName+\"&logstore=\"+this.logstore,\n                method: 'GET',\n            }).then(r=> {\n                return r;\n            });\n\n            let request = slsclient.GetData(this.projectName,this.logstore, {\n                \"topic\": \"\",\n                \"from\": parseInt(options.range.from._d.getTime() / 1000),\n                \"to\": parseInt(options.range.to._d.getTime() / 1000),\n                \"query\": query,\n                \"reverse\": \"false\",\n                \"lines\": \"1000\",\n                \"offset\": \"0\"\n            })\n                .then(result => {\n                    if (!(result.data)) {\n                        return Promise.reject(new Error(\"this promise is rejected\"));\n                    }\n\n                    result.time_col = target.xcol\n                    result.ycol = _.reduce(target.ycol.split(\",\"), (result, data) => {\n                        data = data.split(' ').join('')\n                        if (data) {\n                            result.push(data)\n                        }\n                        return result\n                    }, [])\n                    if (result.ycol.length ==1 && result.ycol[0].lastIndexOf(\"#:#\") != -1)\n                    {\n                        //group by  this col\n                        let gbColArr = result.ycol[0].split(\"#:#\");\n                         \n                        let gbRes = []\n                        let mySet = new Set();\n                        let lastX = \"\";\n                        _(result.data).forEach( data => {\n                                let row = data;\n                                if (lastX == row[result.time_col])\n                                {\n                                    gbRes[gbRes.length-1][data[gbColArr[0]]] = data[gbColArr[1]];\n                                }\n                                else\n                                {\n                                    row [data[gbColArr[0]]] = data[gbColArr[1]];\n                                    gbRes.push(row);\n                                }\n                                lastX = row[result.time_col];\n                                mySet.add(row[gbColArr[0]]);\n                            }\n                        );\n                        result.data = gbRes;\n                        result.ycol = Array.from(mySet);\n                        console.log(\"rewrite data\", result.ycol,result.data);\n                    }\n                    return result\n                })\n                .then(result => {\n                    console.log(\"test\",result)\n                    if(result.time_col == \"map\"){\n                        return result.data;\n                    }\n                    let resResult = []\n                    _(result.ycol).forEach(col => {\n                        let datapoints = []\n                        if(result.time_col != null && result.time_col!= \"\" && result.time_col != \"pie\" && result.time_col!='bar'){\n                            _.sortBy(result.data, [result.time_col]).forEach(data => {\n                                const _time = data[result.time_col]\n                                    const time = parseInt(_time) * 1000\n                                    if (data.hasOwnProperty(col))\n                                     {\n                                    let value = parseFloat(data[col])\n                                    if(isNaN(data[col]))\n                                        value = data[col];\n                                    datapoints.push([value, time])\n                                     }\n                            })\n                        }\n                        else if(result.time_col != null && result.time_col==\"single\")\n                        {\n                            let count = 0;\n                            _(result.data).forEach(data => {\n                                const value = (parseFloat(data[col]));\n                                datapoints.push([value, 1000*(parseInt(data[\"__time__\"])-count)]);\n                                count = count-1;\n                            })\n\n                        }\n                        else{\n                            let count = 0;\n                            _(result.data).forEach(data => {\n                                const value = (data[col]);\n                                datapoints.push([value, 1000*(parseInt(data[\"__time__\"])-count)]);\n                                count = count-1;\n                            })\n                        }\n                        resResult.push({\n                            \"target\": col,\n                            \"datapoints\": datapoints\n                        })\n                    })\n                    if(result.time_col == \"pie\" || result.time_col=='bar' ){\n                        let newtarget =[];\n                        let datapoints =[];\n                        let pieRes = [];\n                        for(var i = 0;i < resResult[0].datapoints.length;++i){\n                            for(var j = 0;j < resResult[1].datapoints[i].length;++j)\n                            {\n                                resResult[1].datapoints[i][j] = parseFloat(resResult[1].datapoints[i][j]);\n                            }\n\n                            pieRes.push({\n                                \"target\" : resResult[0].datapoints[i][0],\n                                \"datapoints\": [resResult[1].datapoints[i]]\n                            });\n                        }\n                        return pieRes;\n                    }\n                    console.log(resResult);\n                    return resResult\n\n                });\n            requests.push(request)\n\n        })\n\n        return Promise.all(requests\n            .map(p => p.catch(e => e)))\n            .then(requests => {\n                console.log(\"1:\", requests,requests[0])\n\n                if(requests && requests[0]&& requests[0].data&& requests[0].data.errorCode&& requests[0].data.errorMessage) {\n                    return {\"data\":{status: \"error\", message: requests[0].data.errorMessage, title: \"Error1\",data:\"\"}};\n                }\n                const _t = _.reduce(requests, (result, data) => {\n                    _(data).forEach(t => result.push(t))\n                    return result\n                }, [])\n                console.log(\"1:\", _t)\n                return {\n                    data: _t\n                }\n\n            }) // 1,Error: 2,3\n            .catch(err => {\n                if (err.data && err.data.message) {\n                    return {status: \"error\", message: err.data.message, title: \"Error\"};\n                } else {\n                    return {status: \"error\", message: err.status, title: \"Error\"};\n                }\n            });\n    }\n\n    testDatasource() {\n        let slsclient = new SLS(this.defaultConfig, this.backendSrv, this.url);\n        return slsclient.GetData(this.projectName,this.logstore,\n            {\n                \"topic\": \"\",\n                \"from\": parseInt((new Date().getTime() / 1000) - 900),\n                \"to\": parseInt(new Date().getTime() / 1000),\n                \"query\": \"\",\n                \"reverse\": \"false\",\n                \"line\": \"10\",\n                \"offset\": \"0\"\n            }).then(function (result) {\n\n            return {status: \"success\", message: \"LogService Connection OK\", title: \"Success\"};\n        }, function (err) {\n            console.log(\"testDataSource err\", err);\n            if (err.data && err.data.message) {\n                return {status: \"error\", message: err.data.message, title: \"Error\"};\n            } else {\n                return {status: \"error\", message: err.status, title: \"Error\"};\n            }\n\n        });\n\n\n    }\n\n    annotationQuery(options) {\n        let query = this.templateSrv.replace(options.annotation.query, {}, 'glob');\n        let annotationQuery = {\n            range: options.range,\n            annotation: {\n                name: options.annotation.name,\n                datasource: options.annotation.datasource,\n                enable: options.annotation.enable,\n                iconColor: options.annotation.iconColor,\n                query: query\n            },\n            rangeRaw: options.rangeRaw\n        };\n\n        return this.doRequest({\n            url: this.url + '/annotations',\n            method: 'POST',\n            data: annotationQuery\n        }).then(result => {\n            return result.data;\n        });\n    }\n\n    metricFindQuery(options) {\n        console.log(options);\n        let requests = []\n        let slsclient = new SLS(this.defaultConfig, this.backendSrv, this.url);\n        let promise = Promise.resolve();\n        let query = this.templateSrv.replace(options, {}, 'glob');\n\n            let end =parseInt( (new Date()).getTime()/1000);\n            let request = slsclient.GetData(this.projectName,this.logstore, {\n                \"topic\": \"\",\n                \"from\": end-86400,\n                \"to\": end,\n                \"query\": query,\n                \"reverse\": \"false\",\n                \"lines\": \"1000\",\n                \"offset\": \"0\"\n            })\n            .then( this.mapToTextValue);\n        return request;\n//result => {\n//                if (!(result.data)) {\n//                    return Promise.reject(new Error(\"this promise is rejected\"));\n//                }\n//                var res = [];\n//                _(result.data).forEach(row => {\n//                    _.map(row, (k,v) => {\n//                        console.log(k,v);\n//                        if(v != \"__time__\" && v != \"__source__\")\n//                            res.push(k);\n//                    });\n//                });\n//                console.log(res);\n//                return res;\n//            }\n    }\n\n    mapToTextValue(result) {\n        return _.map(result.data, (d, i) => {\n            let x = \"\";\n                    _.map(d, (k,v) => {\n                        if(v != \"__time__\" && v != \"__source__\")\n                            x = k;\n                    });\n            console.log(d,x,i);\n            return {text: x, value: x};\n        });\n    }\n\n    doRequest(options) {\n        options.withCredentials = this.withCredentials;\n        options.headers = this.headers;\n\n        return this.backendSrv.datasourceRequest(options);\n    }\n\n    buildQueryParameters(options) {\n        //remove placeholder targets\n        options.targets = _.filter(options.targets, target => {\n            return target.target !== 'select metric';\n        });\n        let targets = _.map(options.targets, target => {\n            return {\n                target: this.templateSrv.replace(target.target, options.scopedVars, 'regex'),\n                refId: target.refId,\n                hide: target.hide,\n                type: target.type || 'timeserie'\n            };\n        });\n\n        options.targets = targets;\n\n        return options;\n    }\n}\n"]}